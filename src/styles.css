/*
  Theme and global variables
*/
html {
  overflow-y: scroll;

  --game-spacing: 32px;
  --header-height: 4rem;

  --color-success: hsl(150deg 70% 30%);
  --color-warning: hsl(50deg 100% 30%);
  --color-error: hsl(0deg 70% 45%);
  --color-gray-100: hsl(0deg 0% 10%);
  --color-gray-300: hsl(0deg 0% 25%);
  --color-gray-500: hsl(0deg 0% 50%);
  --color-gray-700: hsl(0deg 0% 75%);
  --color-gray-900: hsl(0deg 0% 90%);
}

/*
  Custom styles
*/
body {
  font-family: sans-serif;
  user-select: none;
}

@media (max-height: 600px) {
  body {
    --game-spacing: 8px;
  }
}

button {
  margin: 0;
  padding: 0;
  border: none;
  background: transparent;
  cursor: pointer;
  text-align: left;
  color: inherit;
}

.wrapper {
  display: flex;
  flex-direction: column;
  min-height: 100%;
}

header {
  display: flex;
  height: var(--header-height);
  border-bottom: 1px solid var(--color-gray-700);
  color: var(--color-gray-300);
  position: relative;
}

header svg {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translate(0, -50%);
}

h1 {
  flex: 1;
  font-size: 2rem;
  line-height: var(--header-height);
  text-align: center;
}

@media (max-width: 25rem) {
  h1 {
    font-size: 1.25rem;
  }
}

.game-wrapper {
  display: flex;
  flex-direction: row;
  gap: var(--game-spacing);
  padding: var(--game-spacing) 32px;
  margin: 0 auto;
  min-width: 27;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  width: 100%;
  margin: 0 auto;
  padding: 50px;
}

.guess-results {
  display: flex;
  flex-direction: column;
  justify-content: center;
  min-width: 250px;
  flex-basis: 30%;
}

.guess {
  display: flex;
  gap: 4px;
  margin-bottom: 4px;
}

.cell {
  position: relative;
  width: 20%;
  display: grid;
  place-content: center;
  aspect-ratio: 1 / 1;
  border: 2px solid var(--color-gray-700);
  border-radius: var(--radius);
  font-size: 2rem;
}

/*
  Round the corners for the 4 cells at the very corners of
  the game board
*/
.guess:first-of-type .cell:first-of-type {
  --radius: 4px 0px 0px 0px;
}
.guess:first-of-type .cell:last-of-type {
  --radius: 0px 4px 0px 0px;
}
.guess:last-of-type .cell:last-of-type {
  --radius: 0px 0px 4px 0px;
}
.guess:last-of-type .cell:first-of-type {
  --radius: 0px 0px 0px 4px;
}

.cell.correct {
  background: var(--color-success);
  border-color: var(--color-success);
  color: white;
}
.cell.incorrect {
  background: var(--color-gray-300);
  border-color: var(--color-gray-300);
  color: white;
}
.cell.misplaced {
  background: var(--color-warning);
  border-color: var(--color-warning);
  color: white;
}

.guess-input-wrapper {
  display: flex;
  flex-direction: column;
  gap: 8px;
  height: 6.75rem;
  margin: 0 25px;
}

.guess-input-wrapper label {
  font-size: 1.25rem;
}

.guess-input-wrapper input {
  display: block;
  width: 100%;
  font-size: 2rem;
  border: 2px solid var(--color-gray-300);
  border-radius: 4px;
  padding: 8px 16px;
  outline-offset: 4px;
}

.banner {
  position: fixed;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  max-width: 600px;
  margin: 0 auto;
  padding: 32px;
  text-align: center;
  animation: slideUp 750ms cubic-bezier(0, 0.72, 0.24, 1.02);
  border-radius: 4px 4px 0px 0px;
  will-change: transform;
}

.happy.banner {
  background: var(--color-success);
  color: white;
}
.sad.banner {
  background: var(--color-error);
  color: white;
}

.visually-hidden {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
}

/*
  Modal styles

  HACK: I'm doing this in a quick and dirty way.
  Later in the course, we'll see my preferred way of building
  modals in React.
*/
[data-reach-dialog-content] {
  position: relative;
  border-radius: 8px;
  padding: 24px 32px;
}
.modal-close-btn {
  position: absolute;
  top: 0;
  right: 0;
  padding: 16px;
  cursor: pointer;
}
.modal-title {
  margin-bottom: 0.5em;
}

/*
  Keyframe animations
*/
@keyframes slideUp {
  from {
    transform: translateY(100%);
  }
  to {
    transform: translateY(0%);
  }
}
/* Keyboard styles */
.keyboard {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  width: 95%;
  margin: 0 auto;
}

.keyboard .keyboard-line {
  display: flex;
  flex-direction: row;
  width: 100%;
  justify-content: center;
}

.keyboard .keyboard-letter {
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: bold;
  border-radius: 5px;
  margin: 3px;
  max-width: 40px;
  max-height: 40px;
  line-height: 40px;
  cursor: pointer;
  text-align: center;
}

.keyboard-letter.correct {
  color: white;
  background-color: var(--color-success);
}

.keyboard-letter.misplaced {
  color: white;
  background-color: var(--color-warning);
}

.keyboard-letter.incorrect {
  color: white;
  background-color: var(--color-gray-300);
}

.keyboard-letter.unused {
  background-color: #e6e6e6;
  color: black;
}

.guess {
  display: flex;
  gap: 4px;
  margin-bottom: 4px;
}

.input-wrapper {
  display: flex;
  flex-direction: column;
  gap: 12px;
  flex-basis: 20%;
}

.guess-input-icon {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 5px;
  color: white;
  width: 60px;
  height: 60px;
  stroke-width: 2;
}

.guess-input-icon.send {
  background-color: var(--color-success);
}

.guess-input-icon.reset {
  background-color: var(--color-warning);
}

.input-row {
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  gap: 10px;
}

.input-row #guess-input {
  flex: 3;
}

#guess-input {
  height: 60px;
}

.instruction-list {
  text-align: left;
}

.instruction-list li {
  margin-bottom: 10px;
}

.tutorial-wrapper ul li {
  display: flex;
  gap: 10px;
  align-items: center;
  margin: 10px 0;
  text-align: left;
}

.tutorial-wrapper ul p {
  line-height: 1.4;
}

.tutorial-wrapper ul li .cell {
  width: 70px;
  height: 70px;
}

.tutorial-wrapper ul li .cell-text {
  color: white;
  padding: 2px 5px;
}

.tutorial-wrapper ul li .correct {
  background-color: var(--color-success);
}

.tutorial-wrapper ul li .incorrect {
  background-color: var(--color-gray-300);
}

.tutorial-wrapper ul li .misplaced {
  background-color: var(--color-warning);
}

footer {
  position: absolute;
  bottom: 0;
  right: 0;
  padding: 20px;
}

footer a {
  text-decoration: none;
  background-color: black;
  color: white;
  padding: 5px;
  border-radius: 5px;
}

/* Reesponsive styling */
:root {
  --font-size-small: 14px;
  --font-size-medium: 16px;
  --font-size-large: 18px;
}

@media (max-width: 768px) {
  :root {
    font-size: var(--font-size-small);
  }
  .keyboard-letter {
    width: 35px;
    height: 35px;
  }
}

@media (min-width: 769px) and (max-width: 1024px) {
  :root {
    font-size: var(--font-size-medium);
  }
  .keyboard-letter {
    width: 38px;
    height: 38px;
  }
}

@media (min-width: 1025px) {
  :root {
    font-size: var(--font-size-large);
  }
  .keyboard-letter {
    width: 40px;
    height: 40px;
  }
}
